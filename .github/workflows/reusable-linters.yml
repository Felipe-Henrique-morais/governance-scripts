# reusable-linters.yml in Felipe-Henrique-morais/governance-scripts
name: Reusable Linters & Formatters
on:
  workflow_call:
    inputs:
      backend-path:
        description: 'Path to the backend service directory'
        required: false
        type: string
      frontend-path:
        description: 'Path to the frontend service directory'
        required: false
        type: string
    secrets:
      GH_TOKEN:
        required: true

jobs:
  lint-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- Backend Linting ---
      - name: Set up Python for Backend Linting
        # Only run if backend-path is provided
        if: ${{ inputs.backend-path != '' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python Linting Dependencies
        if: ${{ inputs.backend-path != '' }}
        working-directory: ${{ inputs.backend-path }} # Use the input path
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: Lint Backend with Flake8
        if: ${{ inputs.backend-path != '' }}
        working-directory: ${{ inputs.backend-path }} # Use the input path
        run: |
          # Fails on syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Reports other issues as warnings, does not fail the step
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check Backend Formatting with Black
        if: ${{ inputs.backend-path != '' }}
        working-directory: ${{ inputs.backend-path }} # Use the input path
        run: |
          black --check . || echo "::warning::Code formatting issues found by Black in backend. Run 'black .' to fix."

      # --- Frontend Linting ---
      - name: Set up Node.js for Frontend Linting
        # Only run if frontend-path is provided
        if: ${{ inputs.frontend-path != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js Linting Dependencies
        if: ${{ inputs.frontend-path != '' }}
        working-directory: ${{ inputs.frontend-path }} # Use the input path
        run: npm install

      - name: Run Frontend ESLint
        if: ${{ inputs.frontend-path != '' }}
        working-directory: ${{ inputs.frontend-path }} # Use the input path
        # npm run lint will typically return a non-zero exit code if issues are found.
        # This will make the step fail, which is usually desired for linting.
        # If you want it to always succeed and just show warnings, use '|| echo "::warning::..."'
        run: npm run lint